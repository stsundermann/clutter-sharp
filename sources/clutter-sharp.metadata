<?xml version="1.0"?>
<metadata>
    <!-- These are opaque types, fields are supposed to be accessed using the methods -->
    <attr path="//boxed[@name='Point' or @name='Vertex' or @name='Color' or @name='Rect' or @name='Size']//constructor[contains(@cname, 'alloc')]" name="hidden"
        >true</attr>
    <attr path="//boxed//method[@name='Equal']" name="name">Equals</attr>
    <attr path="//boxed[method[@name='Equals']]" name="noequals">true</attr>
    <attr path="//method[@cname='clutter_color_equal']//parameters/parameter" name="type">ClutterColor*</attr>
    <attr path="//boxed//method[@cname='clutter_point_zero' or @cname='clutter_rect_zero']" name="name">Empty</attr>
    <!-- This is AtkImplementor in gtk# -->
    <attr path="//interface[@cname='AtkImplementorIface']" name="cname">AtkImplementor</attr>
    <attr path="//return-type[@type='const GSList*']" name="type">GSList*</attr>
    <attr path="//object[@name='Box']//virtual_method[starts-with(@name, 'ClutterPadding')]" name="hidden">true</attr>
    <attr path="//struct[@name='Event']" name="cname">ClutterEvent</attr>
    <!-- ClutterStage fixes -->
    <attr path="/api/namespace/object[@cname='ClutterStage']/signal[@name='Fullscreen']" name="name">FullscreenEvent</attr>
    <!-- These are duplicates -->
    <attr path="/api/namespace/struct/method[@cname='clutter_paint_node_ref']" name="hidden">true</attr>
    <attr path="/api/namespace/struct/method[@cname='clutter_paint_node_unref']" name="hidden">true</attr>
    <!-- These don't have a max fixed length -->
    <remove-attr path="//method[@cname='clutter_actor_box_from_vertices']/parameters/parameter" name="array_len"/>
    <attr path="//method[@cname='clutter_actor_get_abs_allocation_vertices']" name="hidden">true</attr>
    <attr path="//method[@cname='clutter_actor_get_allocation_vertices']" name="hidden">true</attr>
    <!-- Cairo.FontOptions (IntPtr) is inaccessable -->
    <remove-node path="/api/namespace/object[@cname='ClutterBackend']/method[@name='GetFontOptions']"/>
    <remove-node path="/api/namespace/object[@cname='ClutterBackend']/method[@name='SetFontOptions']"/>
    <!-- Some broken methods -->
    <attr path="//method[@cname='clutter_init']" name="hidden">true</attr>
    <!-- Remove overloads -->
    <remove-attr path="//method[@cname='clutter_actor_apply_relative_transform_to_point']/parameters/parameter" name="allow-none"/>
    <remove-attr path="//method[@cname='clutter_units_from_em_for_font']/parameters/parameter" name="allow-none"/>
    <!-- Introspection fails -->
    <remove-attr path="//method[@cname='clutter_stage_get_color']/parameters/parameter[@pass_as]"/>
    <attr path="//method[@cname='clutter_image_set_data']//parameter[@name='data']" name="type">gpointer</attr>
    <remove-attr path="//method[@cname='clutter_image_set_data']//parameter[@name='data']" name="array"/>
    <!-- Event system fixes -->
    <add-node path="/api">
        <symbol type="marshal" cname="ClutterEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterKeyEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterButtonEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterMotionEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterTouchEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterStageStateEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterCrossingEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
        <symbol type="marshal" cname="ClutterscrollEvent" name="Clutter.Event" marshal_type="IntPtr" call_fmt="{0}.Handle" from_fmt="Clutter.Event.GetEvent ({0})"/>
    </add-node>
    <change-node-type path="//union[@name='Event']">struct</change-node-type>
    <attr path="//struct[contains(@name, 'Event') and not (@name='Event')]" name="parent">ClutterEvent</attr>
    <attr
        path="//struct[contains(@name, 'Event') and not (@name='Event')]//field[@name='Flags' or @name='Type' or @name='Stage' or @name='Source' or @name='Time' or @name='Device']"
        name="hidden">true</attr>
    <attr path="//struct[contains(@name, 'Event')]" name="opaque">true</attr>
    <!-- Rename some events -->
    <attr path="//signal[@name='EnterEvent']" name="name">Entered</attr>
    <attr path="//signal[@name='ScrollEvent']" name="name">Scrolled</attr>
    <attr path="//signal[@name='TouchEvent']" name="name">Touched</attr>
    <attr path="//signal[@name='DestroyEvent']" name="name">Destroyed</attr>
    <attr path="//signal[@name='HideEvent']" name="name">Hidden</attr>
    <attr path="//signal[@name='EventEvent']" name="name">Event</attr>
    <attr path="//signal[@name='PaintEvent']" name="name">Painted</attr>
    <attr path="//signal[@name='Pick']" name="name">Picked</attr>
    <attr path="//signal[@name='QueueRedrawEvent']" name="name">RedrawQueued</attr>
    <attr path="//signal[@name='QueueRelayoutEvent']" name="name">RelayoutQueued</attr>
    <attr path="//signal[@name='RealizeEvent']" name="name">Realized</attr>
    <attr path="//signal[@name='ShowEvent']" name="name">Shown</attr>
    <attr path="//signal[@name='Draw']" name="name">Drawn</attr>
    <attr path="//signal[@name='UnrealizeEvent']" name="name">Unrealized</attr>
    <attr path="//signal[@name='ButtonPressEvent']" name="name">ButtonPressed</attr>
    <attr path="//signal[@name='CapturedEvent']" name="name">Captured</attr>
    <attr path="//signal[@name='KeyReleaseEvent']" name="name">KeyReleased</attr>
    <attr path="//signal[@name='KeyPressEvent']" name="name">KeyPressed</attr>
    <attr path="//signal[@name='LongPress']" name="name">PressedLong</attr>
    <attr path="//signal[@name='ButtonReleaseEvent']" name="name">ButtonReleased</attr>
    <attr path="//signal[@name='ChildNotifyEvent']" name="name">ChildNotified</attr>
    <attr path="//signal[@name='CompletedEvent']" name="name">Completed</attr>
    <attr path="//signal[@name='LayoutChangedEvent']" name="name">LayoutChanged</attr>
    <attr path="//signal[@name='DeleteTextEvent']" name="name">TextDeleted</attr>
    <attr path="//signal[@name='ActivateEvent']" name="name">Activated</attr>
    <attr path="//signal[@name='InsertTextEvent']" name="name">TextInserted</attr>
    <attr path="//signal[@name='MotionEvent']" name="name">Motion</attr>
    <attr path="//signal[@name='DragBegin']" name="name">DragBegun</attr>
    <attr path="//signal[@name='DragEnd']" name="name">DragEnded</attr>
    <attr path="//signal[@name='Drop']" name="name">Dropped</attr>
    <attr path="//signal[@name='DropCancel']" name="name">DropCanceled</attr>
    <attr path="//signal[@name='GestureCancel']" name="name">GestureCanceled</attr>
    <attr path="//signal[@name='GestureBegin']" name="name">GestureBegun</attr>
    <attr path="//signal[@name='GestureEnd']" name="name">GestureEnded</attr>
    <attr path="//signal[@name='Rotate']" name="name">Rotated</attr>
    <attr path="//signal[@name='Activate']" name="name">Activated</attr>
    <attr path="//signal[@name='Deactivate']" name="name">Deactivated</attr>
    <attr path="//signal[@name='DeleteEvent']" name="name">Deleted</attr>
    <attr path="//signal[@name='Swipe']" name="name">Swiped</attr>
    <attr path="//signal[@name='Tap']" name="name">Tapped</attr>
    <attr path="//signal[@name='CursorEvent']" name="name">Cursor</attr>
    <attr path="//signal[@name='PixbufChange']" name="name">PixbufChanged</attr>
    <attr path="//signal[@name='SizeChange']" name="name">SizeChanged</attr>
    <attr path="//signal[@name='CreateSurface']" name="name">SurfaceCreated</attr>
    <attr path="//signal[@name='Zoom']" name="name">Zoomed</attr>
    <attr path="//object[@name='Actor']/property[@name='Realized']" name="name">IsRealized</attr>
    <attr path="//method[@cname='clutter_animation_completed']" name="name">EmitCompleted</attr>
    <attr path="//method[@cname='clutter_layout_manager_layout_changed']" name="name">EmitLayoutChanged</attr>
    <attr path="//method[@cname='clutter_actor_event']" name="name">Emit</attr>

    <!-- API improvements -->
    <add-node path="/api/namespace[@name='Clutter']">
        <class name="Application" cname="ClutterApplication" disable_void_ctor="1"/>
    </add-node>
    <move-node path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_main') or starts-with(@cname, 'clutter_base')]"
        >/api/namespace/class[@name='Application']</move-node>
    <add-node path="/api/namespace[@name='Clutter']">
        <class name="Threads" cname="ClutterThreads" disable_void_ctor="1"/>
    </add-node>
    <move-node path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_threads')]">/api/namespace/class[@name='Threads']</move-node>
    <add-node path="/api/namespace[@name='Clutter']">
        <class name="Matrix" cname="ClutterMatrix" disable_void_ctor="1"/>
    </add-node>
    <move-node path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_matrix')]">/api/namespace/class[@name='Matrix']</move-node>
    <add-node path="/api/namespace[@name='Clutter']">
        <class name="Value" cname="ClutterValue" disable_void_ctor="1"/>
    </add-node>
    <move-node path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_value')]">/api/namespace/class[@name='Value']</move-node>
    <add-node path="/api/namespace[@name='Clutter']">
        <class name="Util" cname="ClutterUtil" disable_void_ctor="1"/>
    </add-node>
    <move-node path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_util')]">/api/namespace/class[@name='Util']</move-node>
    <!-- Remove duplicates from Global class -->
    <attr path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_units')]" name="hidden">true</attr>
    <attr path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_color')]" name="hidden">true</attr>
    <attr path="/api/namespace/object[@name='Global']//method[starts-with(@cname, 'clutter_event')]" name="hidden">true</attr>
    <!-- ClutterGst fixes -->
    <attr path="//interface[@name='Player']//property" name="hidden">true</attr>
    <attr path="//namespace[@name='GtkClutter' or @name='ClutterGst']//object[@name='Global']" name="hidden">true</attr>
</metadata>
